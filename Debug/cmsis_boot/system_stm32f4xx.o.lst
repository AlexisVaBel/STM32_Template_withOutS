   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw",%progbits
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 007A030A 		.word	168000000
  26              		.global	AHBPrescTable
  27              		.section	.data.AHBPrescTable,"aw",%progbits
  28              		.align	2
  31              	AHBPrescTable:
  32 0000 00       		.byte	0
  33 0001 00       		.byte	0
  34 0002 00       		.byte	0
  35 0003 00       		.byte	0
  36 0004 00       		.byte	0
  37 0005 00       		.byte	0
  38 0006 00       		.byte	0
  39 0007 00       		.byte	0
  40 0008 01       		.byte	1
  41 0009 02       		.byte	2
  42 000a 03       		.byte	3
  43 000b 04       		.byte	4
  44 000c 06       		.byte	6
  45 000d 07       		.byte	7
  46 000e 08       		.byte	8
  47 000f 09       		.byte	9
  48              		.section	.text.SystemInit,"ax",%progbits
  49              		.align	2
  50              		.global	SystemInit
  51              		.thumb
  52              		.thumb_func
  54              	SystemInit:
  55              	.LFB110:
  56              		.file 1 "../cmsis_boot/system_stm32f4xx.c"
   1:../cmsis_boot/system_stm32f4xx.c **** /**
   2:../cmsis_boot/system_stm32f4xx.c ****   ******************************************************************************
   3:../cmsis_boot/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../cmsis_boot/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../cmsis_boot/system_stm32f4xx.c ****   * @version V1.0.0
   6:../cmsis_boot/system_stm32f4xx.c ****   * @date    30-September-2011
   7:../cmsis_boot/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../cmsis_boot/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../cmsis_boot/system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../cmsis_boot/system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../cmsis_boot/system_stm32f4xx.c ****   *             
  12:../cmsis_boot/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../cmsis_boot/system_stm32f4xx.c ****   *     user application:
  14:../cmsis_boot/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../cmsis_boot/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../cmsis_boot/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../cmsis_boot/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../cmsis_boot/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../cmsis_boot/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../cmsis_boot/system_stm32f4xx.c ****   *
  21:../cmsis_boot/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../cmsis_boot/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../cmsis_boot/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../cmsis_boot/system_stm32f4xx.c ****   *                                     
  25:../cmsis_boot/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../cmsis_boot/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../cmsis_boot/system_stm32f4xx.c ****   *                                 during program execution.
  28:../cmsis_boot/system_stm32f4xx.c ****   *
  29:../cmsis_boot/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../cmsis_boot/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../cmsis_boot/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../cmsis_boot/system_stm32f4xx.c ****   *
  33:../cmsis_boot/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../cmsis_boot/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../cmsis_boot/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../cmsis_boot/system_stm32f4xx.c ****   *
  37:../cmsis_boot/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
  38:../cmsis_boot/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../cmsis_boot/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../cmsis_boot/system_stm32f4xx.c ****   *    value to your own configuration.
  41:../cmsis_boot/system_stm32f4xx.c ****   *
  42:../cmsis_boot/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../cmsis_boot/system_stm32f4xx.c ****   *=============================================================================
  44:../cmsis_boot/system_stm32f4xx.c ****   *=============================================================================
  45:../cmsis_boot/system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../cmsis_boot/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../cmsis_boot/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../cmsis_boot/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../cmsis_boot/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../cmsis_boot/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../cmsis_boot/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../cmsis_boot/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 25000000
  60:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../cmsis_boot/system_stm32f4xx.c ****   *        PLL_M                                  | 25
  62:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../cmsis_boot/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../cmsis_boot/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../cmsis_boot/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../cmsis_boot/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
  70:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../cmsis_boot/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
  72:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../cmsis_boot/system_stm32f4xx.c ****   *        I2S input clock                        | NA
  74:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../cmsis_boot/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../cmsis_boot/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
  78:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../cmsis_boot/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../cmsis_boot/system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../cmsis_boot/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../cmsis_boot/system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../cmsis_boot/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../cmsis_boot/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../cmsis_boot/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../cmsis_boot/system_stm32f4xx.c ****   *=============================================================================
  91:../cmsis_boot/system_stm32f4xx.c ****   ****************************************************************************** 
  92:../cmsis_boot/system_stm32f4xx.c ****   * @attention
  93:../cmsis_boot/system_stm32f4xx.c ****   *
  94:../cmsis_boot/system_stm32f4xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:../cmsis_boot/system_stm32f4xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:../cmsis_boot/system_stm32f4xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:../cmsis_boot/system_stm32f4xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:../cmsis_boot/system_stm32f4xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:../cmsis_boot/system_stm32f4xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:../cmsis_boot/system_stm32f4xx.c ****   *
 101:../cmsis_boot/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:../cmsis_boot/system_stm32f4xx.c ****   ******************************************************************************
 103:../cmsis_boot/system_stm32f4xx.c ****   */
 104:../cmsis_boot/system_stm32f4xx.c **** 
 105:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup CMSIS
 106:../cmsis_boot/system_stm32f4xx.c ****   * @{
 107:../cmsis_boot/system_stm32f4xx.c ****   */
 108:../cmsis_boot/system_stm32f4xx.c **** 
 109:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 110:../cmsis_boot/system_stm32f4xx.c ****   * @{
 111:../cmsis_boot/system_stm32f4xx.c ****   */  
 112:../cmsis_boot/system_stm32f4xx.c ****   
 113:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:../cmsis_boot/system_stm32f4xx.c ****   * @{
 115:../cmsis_boot/system_stm32f4xx.c ****   */
 116:../cmsis_boot/system_stm32f4xx.c **** 
 117:../cmsis_boot/system_stm32f4xx.c **** #include "stm32f4xx.h"
 118:../cmsis_boot/system_stm32f4xx.c **** 
 119:../cmsis_boot/system_stm32f4xx.c **** /**
 120:../cmsis_boot/system_stm32f4xx.c ****   * @}
 121:../cmsis_boot/system_stm32f4xx.c ****   */
 122:../cmsis_boot/system_stm32f4xx.c **** 
 123:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:../cmsis_boot/system_stm32f4xx.c ****   * @{
 125:../cmsis_boot/system_stm32f4xx.c ****   */
 126:../cmsis_boot/system_stm32f4xx.c **** 
 127:../cmsis_boot/system_stm32f4xx.c **** /**
 128:../cmsis_boot/system_stm32f4xx.c ****   * @}
 129:../cmsis_boot/system_stm32f4xx.c ****   */
 130:../cmsis_boot/system_stm32f4xx.c **** 
 131:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:../cmsis_boot/system_stm32f4xx.c ****   * @{
 133:../cmsis_boot/system_stm32f4xx.c ****   */
 134:../cmsis_boot/system_stm32f4xx.c **** 
 135:../cmsis_boot/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
 136:../cmsis_boot/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 137:../cmsis_boot/system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 138:../cmsis_boot/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 139:../cmsis_boot/system_stm32f4xx.c **** 
 140:../cmsis_boot/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 141:../cmsis_boot/system_stm32f4xx.c ****      Internal SRAM. */
 142:../cmsis_boot/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 143:../cmsis_boot/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 144:../cmsis_boot/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 145:../cmsis_boot/system_stm32f4xx.c **** /******************************************************************************/
 146:../cmsis_boot/system_stm32f4xx.c **** 
 147:../cmsis_boot/system_stm32f4xx.c **** /************************* PLL Parameters *************************************/
 148:../cmsis_boot/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 149:../cmsis_boot/system_stm32f4xx.c **** #define PLL_M      25
 150:../cmsis_boot/system_stm32f4xx.c **** #define PLL_N      336
 151:../cmsis_boot/system_stm32f4xx.c **** 
 152:../cmsis_boot/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 153:../cmsis_boot/system_stm32f4xx.c **** #define PLL_P      2
 154:../cmsis_boot/system_stm32f4xx.c **** 
 155:../cmsis_boot/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 156:../cmsis_boot/system_stm32f4xx.c **** #define PLL_Q      7
 157:../cmsis_boot/system_stm32f4xx.c **** 
 158:../cmsis_boot/system_stm32f4xx.c **** /******************************************************************************/
 159:../cmsis_boot/system_stm32f4xx.c **** 
 160:../cmsis_boot/system_stm32f4xx.c **** /**
 161:../cmsis_boot/system_stm32f4xx.c ****   * @}
 162:../cmsis_boot/system_stm32f4xx.c ****   */
 163:../cmsis_boot/system_stm32f4xx.c **** 
 164:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 165:../cmsis_boot/system_stm32f4xx.c ****   * @{
 166:../cmsis_boot/system_stm32f4xx.c ****   */
 167:../cmsis_boot/system_stm32f4xx.c **** 
 168:../cmsis_boot/system_stm32f4xx.c **** /**
 169:../cmsis_boot/system_stm32f4xx.c ****   * @}
 170:../cmsis_boot/system_stm32f4xx.c ****   */
 171:../cmsis_boot/system_stm32f4xx.c **** 
 172:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 173:../cmsis_boot/system_stm32f4xx.c ****   * @{
 174:../cmsis_boot/system_stm32f4xx.c ****   */
 175:../cmsis_boot/system_stm32f4xx.c **** 
 176:../cmsis_boot/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 177:../cmsis_boot/system_stm32f4xx.c **** 
 178:../cmsis_boot/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 179:../cmsis_boot/system_stm32f4xx.c **** 
 180:../cmsis_boot/system_stm32f4xx.c **** /**
 181:../cmsis_boot/system_stm32f4xx.c ****   * @}
 182:../cmsis_boot/system_stm32f4xx.c ****   */
 183:../cmsis_boot/system_stm32f4xx.c **** 
 184:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 185:../cmsis_boot/system_stm32f4xx.c ****   * @{
 186:../cmsis_boot/system_stm32f4xx.c ****   */
 187:../cmsis_boot/system_stm32f4xx.c **** 
 188:../cmsis_boot/system_stm32f4xx.c **** static void SetSysClock(void);
 189:../cmsis_boot/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 190:../cmsis_boot/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 191:../cmsis_boot/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 192:../cmsis_boot/system_stm32f4xx.c **** 
 193:../cmsis_boot/system_stm32f4xx.c **** /**
 194:../cmsis_boot/system_stm32f4xx.c ****   * @}
 195:../cmsis_boot/system_stm32f4xx.c ****   */
 196:../cmsis_boot/system_stm32f4xx.c **** 
 197:../cmsis_boot/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 198:../cmsis_boot/system_stm32f4xx.c ****   * @{
 199:../cmsis_boot/system_stm32f4xx.c ****   */
 200:../cmsis_boot/system_stm32f4xx.c **** 
 201:../cmsis_boot/system_stm32f4xx.c **** /**
 202:../cmsis_boot/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 203:../cmsis_boot/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 204:../cmsis_boot/system_stm32f4xx.c ****   *         SystemFrequency variable.
 205:../cmsis_boot/system_stm32f4xx.c ****   * @param  None
 206:../cmsis_boot/system_stm32f4xx.c ****   * @retval None
 207:../cmsis_boot/system_stm32f4xx.c ****   */
 208:../cmsis_boot/system_stm32f4xx.c **** void SystemInit(void)
 209:../cmsis_boot/system_stm32f4xx.c **** {
  57              		.loc 1 209 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
 210:../cmsis_boot/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 211:../cmsis_boot/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 212:../cmsis_boot/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  67              		.loc 1 212 0
  68 0004 4FF46D43 		mov	r3, #60672
  69 0008 CEF20003 		movt	r3, 57344
  70 000c 4FF46D42 		mov	r2, #60672
  71 0010 CEF20002 		movt	r2, 57344
  72 0014 D2F88820 		ldr	r2, [r2, #136]
  73 0018 42F47002 		orr	r2, r2, #15728640
  74 001c C3F88820 		str	r2, [r3, #136]
 213:../cmsis_boot/system_stm32f4xx.c ****   #endif
 214:../cmsis_boot/system_stm32f4xx.c **** 
 215:../cmsis_boot/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 216:../cmsis_boot/system_stm32f4xx.c ****   /* Set HSION bit */
 217:../cmsis_boot/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  75              		.loc 1 217 0
  76 0020 4FF46053 		mov	r3, #14336
  77 0024 C4F20203 		movt	r3, 16386
  78 0028 4FF46052 		mov	r2, #14336
  79 002c C4F20202 		movt	r2, 16386
  80 0030 1268     		ldr	r2, [r2]
  81 0032 42F00102 		orr	r2, r2, #1
  82 0036 1A60     		str	r2, [r3]
 218:../cmsis_boot/system_stm32f4xx.c **** 
 219:../cmsis_boot/system_stm32f4xx.c ****   /* Reset CFGR register */
 220:../cmsis_boot/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  83              		.loc 1 220 0
  84 0038 4FF46053 		mov	r3, #14336
  85 003c C4F20203 		movt	r3, 16386
  86 0040 0022     		movs	r2, #0
  87 0042 9A60     		str	r2, [r3, #8]
 221:../cmsis_boot/system_stm32f4xx.c **** 
 222:../cmsis_boot/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 223:../cmsis_boot/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  88              		.loc 1 223 0
  89 0044 4FF46053 		mov	r3, #14336
  90 0048 C4F20203 		movt	r3, 16386
  91 004c 4FF46052 		mov	r2, #14336
  92 0050 C4F20202 		movt	r2, 16386
  93 0054 1268     		ldr	r2, [r2]
  94 0056 22F08472 		bic	r2, r2, #17301504
  95 005a 22F48032 		bic	r2, r2, #65536
  96 005e 1A60     		str	r2, [r3]
 224:../cmsis_boot/system_stm32f4xx.c **** 
 225:../cmsis_boot/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 226:../cmsis_boot/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  97              		.loc 1 226 0
  98 0060 4FF46053 		mov	r3, #14336
  99 0064 C4F20203 		movt	r3, 16386
 100 0068 43F21002 		movw	r2, #12304
 101 006c C2F20042 		movt	r2, 9216
 102 0070 5A60     		str	r2, [r3, #4]
 227:../cmsis_boot/system_stm32f4xx.c **** 
 228:../cmsis_boot/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 229:../cmsis_boot/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 103              		.loc 1 229 0
 104 0072 4FF46053 		mov	r3, #14336
 105 0076 C4F20203 		movt	r3, 16386
 106 007a 4FF46052 		mov	r2, #14336
 107 007e C4F20202 		movt	r2, 16386
 108 0082 1268     		ldr	r2, [r2]
 109 0084 22F48022 		bic	r2, r2, #262144
 110 0088 1A60     		str	r2, [r3]
 230:../cmsis_boot/system_stm32f4xx.c **** 
 231:../cmsis_boot/system_stm32f4xx.c ****   /* Disable all interrupts */
 232:../cmsis_boot/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 111              		.loc 1 232 0
 112 008a 4FF46053 		mov	r3, #14336
 113 008e C4F20203 		movt	r3, 16386
 114 0092 0022     		movs	r2, #0
 115 0094 DA60     		str	r2, [r3, #12]
 233:../cmsis_boot/system_stm32f4xx.c **** 
 234:../cmsis_boot/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 235:../cmsis_boot/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 236:../cmsis_boot/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 237:../cmsis_boot/system_stm32f4xx.c ****          
 238:../cmsis_boot/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 239:../cmsis_boot/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 240:../cmsis_boot/system_stm32f4xx.c ****   SetSysClock();
 116              		.loc 1 240 0
 117 0096 FFF7FEFF 		bl	SetSysClock
 241:../cmsis_boot/system_stm32f4xx.c **** 
 242:../cmsis_boot/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 243:../cmsis_boot/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 244:../cmsis_boot/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 245:../cmsis_boot/system_stm32f4xx.c **** #else
 246:../cmsis_boot/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 118              		.loc 1 246 0
 119 009a 4FF46D43 		mov	r3, #60672
 120 009e CEF20003 		movt	r3, 57344
 121 00a2 4FF00062 		mov	r2, #134217728
 122 00a6 9A60     		str	r2, [r3, #8]
 247:../cmsis_boot/system_stm32f4xx.c **** #endif
 248:../cmsis_boot/system_stm32f4xx.c **** }
 123              		.loc 1 248 0
 124 00a8 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE110:
 128 00aa 00BF     		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 129              		.align	2
 130              		.global	SystemCoreClockUpdate
 131              		.thumb
 132              		.thumb_func
 134              	SystemCoreClockUpdate:
 135              	.LFB111:
 249:../cmsis_boot/system_stm32f4xx.c **** 
 250:../cmsis_boot/system_stm32f4xx.c **** /**
 251:../cmsis_boot/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 252:../cmsis_boot/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 253:../cmsis_boot/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 254:../cmsis_boot/system_stm32f4xx.c ****   *         other parameters.
 255:../cmsis_boot/system_stm32f4xx.c ****   *           
 256:../cmsis_boot/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 257:../cmsis_boot/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 258:../cmsis_boot/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 259:../cmsis_boot/system_stm32f4xx.c ****   *     
 260:../cmsis_boot/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 261:../cmsis_boot/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 262:../cmsis_boot/system_stm32f4xx.c ****   *           constant and the selected clock source:
 263:../cmsis_boot/system_stm32f4xx.c ****   *             
 264:../cmsis_boot/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 265:../cmsis_boot/system_stm32f4xx.c ****   *                                              
 266:../cmsis_boot/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 267:../cmsis_boot/system_stm32f4xx.c ****   *                          
 268:../cmsis_boot/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 269:../cmsis_boot/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 270:../cmsis_boot/system_stm32f4xx.c ****   *         
 271:../cmsis_boot/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 272:../cmsis_boot/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 273:../cmsis_boot/system_stm32f4xx.c ****   *             in voltage and temperature.   
 274:../cmsis_boot/system_stm32f4xx.c ****   *    
 275:../cmsis_boot/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 276:../cmsis_boot/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 277:../cmsis_boot/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 278:../cmsis_boot/system_stm32f4xx.c ****   *              have wrong result.
 279:../cmsis_boot/system_stm32f4xx.c ****   *                
 280:../cmsis_boot/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 281:../cmsis_boot/system_stm32f4xx.c ****   *           value for HSE crystal.
 282:../cmsis_boot/system_stm32f4xx.c ****   *     
 283:../cmsis_boot/system_stm32f4xx.c ****   * @param  None
 284:../cmsis_boot/system_stm32f4xx.c ****   * @retval None
 285:../cmsis_boot/system_stm32f4xx.c ****   */
 286:../cmsis_boot/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 287:../cmsis_boot/system_stm32f4xx.c **** {
 136              		.loc 1 287 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 24
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 80B4     		push	{r7}
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 0002 87B0     		sub	sp, sp, #28
 145              		.cfi_def_cfa_offset 32
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 288:../cmsis_boot/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 148              		.loc 1 288 0
 149 0006 0023     		movs	r3, #0
 150 0008 3B61     		str	r3, [r7, #16]
 151 000a 0023     		movs	r3, #0
 152 000c 7B61     		str	r3, [r7, #20]
 153 000e 0223     		movs	r3, #2
 154 0010 FB60     		str	r3, [r7, #12]
 155 0012 0023     		movs	r3, #0
 156 0014 BB60     		str	r3, [r7, #8]
 157 0016 0223     		movs	r3, #2
 158 0018 7B60     		str	r3, [r7, #4]
 289:../cmsis_boot/system_stm32f4xx.c ****   
 290:../cmsis_boot/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 291:../cmsis_boot/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 159              		.loc 1 291 0
 160 001a 4FF46053 		mov	r3, #14336
 161 001e C4F20203 		movt	r3, 16386
 162 0022 9B68     		ldr	r3, [r3, #8]
 163 0024 03F00C03 		and	r3, r3, #12
 164 0028 3B61     		str	r3, [r7, #16]
 292:../cmsis_boot/system_stm32f4xx.c **** 
 293:../cmsis_boot/system_stm32f4xx.c ****   switch (tmp)
 165              		.loc 1 293 0
 166 002a 3B69     		ldr	r3, [r7, #16]
 167 002c 042B     		cmp	r3, #4
 168 002e 0DD0     		beq	.L4
 169 0030 082B     		cmp	r3, #8
 170 0032 15D0     		beq	.L5
 171 0034 002B     		cmp	r3, #0
 172 0036 63D1     		bne	.L10
 294:../cmsis_boot/system_stm32f4xx.c ****   {
 295:../cmsis_boot/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 296:../cmsis_boot/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 173              		.loc 1 296 0
 174 0038 40F20003 		movw	r3, #:lower16:SystemCoreClock
 175 003c C0F20003 		movt	r3, #:upper16:SystemCoreClock
 176 0040 4FF41052 		mov	r2, #9216
 177 0044 C0F2F402 		movt	r2, 244
 178 0048 1A60     		str	r2, [r3]
 297:../cmsis_boot/system_stm32f4xx.c ****       break;
 179              		.loc 1 297 0
 180 004a 63E0     		b	.L7
 181              	.L4:
 298:../cmsis_boot/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 299:../cmsis_boot/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 182              		.loc 1 299 0
 183 004c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 184 0050 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 185 0054 47F64002 		movw	r2, #30784
 186 0058 C0F27D12 		movt	r2, 381
 187 005c 1A60     		str	r2, [r3]
 300:../cmsis_boot/system_stm32f4xx.c ****       break;
 188              		.loc 1 300 0
 189 005e 59E0     		b	.L7
 190              	.L5:
 301:../cmsis_boot/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 302:../cmsis_boot/system_stm32f4xx.c **** 
 303:../cmsis_boot/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 304:../cmsis_boot/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 305:../cmsis_boot/system_stm32f4xx.c ****          */    
 306:../cmsis_boot/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 191              		.loc 1 306 0
 192 0060 4FF46053 		mov	r3, #14336
 193 0064 C4F20203 		movt	r3, 16386
 194 0068 5B68     		ldr	r3, [r3, #4]
 195 006a 03F48003 		and	r3, r3, #4194304
 196 006e 9B0D     		lsrs	r3, r3, #22
 197 0070 BB60     		str	r3, [r7, #8]
 307:../cmsis_boot/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 198              		.loc 1 307 0
 199 0072 4FF46053 		mov	r3, #14336
 200 0076 C4F20203 		movt	r3, 16386
 201 007a 5B68     		ldr	r3, [r3, #4]
 202 007c 03F03F03 		and	r3, r3, #63
 203 0080 7B60     		str	r3, [r7, #4]
 308:../cmsis_boot/system_stm32f4xx.c ****       
 309:../cmsis_boot/system_stm32f4xx.c ****       if (pllsource != 0)
 204              		.loc 1 309 0
 205 0082 BB68     		ldr	r3, [r7, #8]
 206 0084 002B     		cmp	r3, #0
 207 0086 13D0     		beq	.L8
 310:../cmsis_boot/system_stm32f4xx.c ****       {
 311:../cmsis_boot/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 312:../cmsis_boot/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 208              		.loc 1 312 0
 209 0088 47F64003 		movw	r3, #30784
 210 008c C0F27D13 		movt	r3, 381
 211 0090 7A68     		ldr	r2, [r7, #4]
 212 0092 B3FBF2F2 		udiv	r2, r3, r2
 213 0096 4FF46053 		mov	r3, #14336
 214 009a C4F20203 		movt	r3, 16386
 215 009e 5968     		ldr	r1, [r3, #4]
 216 00a0 47F6C073 		movw	r3, #32704
 217 00a4 0B40     		ands	r3, r3, r1
 218 00a6 9B09     		lsrs	r3, r3, #6
 219 00a8 03FB02F3 		mul	r3, r3, r2
 220 00ac 7B61     		str	r3, [r7, #20]
 221 00ae 12E0     		b	.L9
 222              	.L8:
 313:../cmsis_boot/system_stm32f4xx.c ****       }
 314:../cmsis_boot/system_stm32f4xx.c ****       else
 315:../cmsis_boot/system_stm32f4xx.c ****       {
 316:../cmsis_boot/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 317:../cmsis_boot/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 223              		.loc 1 317 0
 224 00b0 4FF41053 		mov	r3, #9216
 225 00b4 C0F2F403 		movt	r3, 244
 226 00b8 7A68     		ldr	r2, [r7, #4]
 227 00ba B3FBF2F2 		udiv	r2, r3, r2
 228 00be 4FF46053 		mov	r3, #14336
 229 00c2 C4F20203 		movt	r3, 16386
 230 00c6 5968     		ldr	r1, [r3, #4]
 231 00c8 47F6C073 		movw	r3, #32704
 232 00cc 0B40     		ands	r3, r3, r1
 233 00ce 9B09     		lsrs	r3, r3, #6
 234 00d0 03FB02F3 		mul	r3, r3, r2
 235 00d4 7B61     		str	r3, [r7, #20]
 236              	.L9:
 318:../cmsis_boot/system_stm32f4xx.c ****       }
 319:../cmsis_boot/system_stm32f4xx.c **** 
 320:../cmsis_boot/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 237              		.loc 1 320 0
 238 00d6 4FF46053 		mov	r3, #14336
 239 00da C4F20203 		movt	r3, 16386
 240 00de 5B68     		ldr	r3, [r3, #4]
 241 00e0 03F44033 		and	r3, r3, #196608
 242 00e4 1B0C     		lsrs	r3, r3, #16
 243 00e6 0133     		adds	r3, r3, #1
 244 00e8 5B00     		lsls	r3, r3, #1
 245 00ea FB60     		str	r3, [r7, #12]
 321:../cmsis_boot/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 246              		.loc 1 321 0
 247 00ec 7A69     		ldr	r2, [r7, #20]
 248 00ee FB68     		ldr	r3, [r7, #12]
 249 00f0 B2FBF3F2 		udiv	r2, r2, r3
 250 00f4 40F20003 		movw	r3, #:lower16:SystemCoreClock
 251 00f8 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 252 00fc 1A60     		str	r2, [r3]
 322:../cmsis_boot/system_stm32f4xx.c ****       break;
 253              		.loc 1 322 0
 254 00fe 09E0     		b	.L7
 255              	.L10:
 323:../cmsis_boot/system_stm32f4xx.c ****     default:
 324:../cmsis_boot/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 256              		.loc 1 324 0
 257 0100 40F20003 		movw	r3, #:lower16:SystemCoreClock
 258 0104 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 259 0108 4FF41052 		mov	r2, #9216
 260 010c C0F2F402 		movt	r2, 244
 261 0110 1A60     		str	r2, [r3]
 325:../cmsis_boot/system_stm32f4xx.c ****       break;
 262              		.loc 1 325 0
 263 0112 00BF     		nop
 264              	.L7:
 326:../cmsis_boot/system_stm32f4xx.c ****   }
 327:../cmsis_boot/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 328:../cmsis_boot/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 329:../cmsis_boot/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 265              		.loc 1 329 0
 266 0114 4FF46053 		mov	r3, #14336
 267 0118 C4F20203 		movt	r3, 16386
 268 011c 9B68     		ldr	r3, [r3, #8]
 269 011e 03F0F003 		and	r3, r3, #240
 270 0122 1A09     		lsrs	r2, r3, #4
 271 0124 40F20003 		movw	r3, #:lower16:AHBPrescTable
 272 0128 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 273 012c 9B5C     		ldrb	r3, [r3, r2]
 274 012e DBB2     		uxtb	r3, r3
 275 0130 3B61     		str	r3, [r7, #16]
 330:../cmsis_boot/system_stm32f4xx.c ****   /* HCLK frequency */
 331:../cmsis_boot/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 276              		.loc 1 331 0
 277 0132 40F20003 		movw	r3, #:lower16:SystemCoreClock
 278 0136 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 279 013a 1A68     		ldr	r2, [r3]
 280 013c 3B69     		ldr	r3, [r7, #16]
 281 013e DA40     		lsrs	r2, r2, r3
 282 0140 40F20003 		movw	r3, #:lower16:SystemCoreClock
 283 0144 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 284 0148 1A60     		str	r2, [r3]
 332:../cmsis_boot/system_stm32f4xx.c **** }
 285              		.loc 1 332 0
 286 014a 1C37     		adds	r7, r7, #28
 287 014c BD46     		mov	sp, r7
 288              		@ sp needed
 289 014e 5DF8047B 		ldr	r7, [sp], #4
 290 0152 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE111:
 294              		.section	.text.SetSysClock,"ax",%progbits
 295              		.align	2
 296              		.thumb
 297              		.thumb_func
 299              	SetSysClock:
 300              	.LFB112:
 333:../cmsis_boot/system_stm32f4xx.c **** 
 334:../cmsis_boot/system_stm32f4xx.c **** /**
 335:../cmsis_boot/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 336:../cmsis_boot/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 337:../cmsis_boot/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 338:../cmsis_boot/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 339:../cmsis_boot/system_stm32f4xx.c ****   * @param  None
 340:../cmsis_boot/system_stm32f4xx.c ****   * @retval None
 341:../cmsis_boot/system_stm32f4xx.c ****   */
 342:../cmsis_boot/system_stm32f4xx.c **** static void SetSysClock(void)
 343:../cmsis_boot/system_stm32f4xx.c **** {
 301              		.loc 1 343 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 83B0     		sub	sp, sp, #12
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 344:../cmsis_boot/system_stm32f4xx.c **** /******************************************************************************/
 345:../cmsis_boot/system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 346:../cmsis_boot/system_stm32f4xx.c **** /******************************************************************************/
 347:../cmsis_boot/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 313              		.loc 1 347 0
 314 0006 0023     		movs	r3, #0
 315 0008 7B60     		str	r3, [r7, #4]
 316 000a 0023     		movs	r3, #0
 317 000c 3B60     		str	r3, [r7]
 348:../cmsis_boot/system_stm32f4xx.c ****   
 349:../cmsis_boot/system_stm32f4xx.c ****   /* Enable HSE */
 350:../cmsis_boot/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 318              		.loc 1 350 0
 319 000e 4FF46053 		mov	r3, #14336
 320 0012 C4F20203 		movt	r3, 16386
 321 0016 4FF46052 		mov	r2, #14336
 322 001a C4F20202 		movt	r2, 16386
 323 001e 1268     		ldr	r2, [r2]
 324 0020 42F48032 		orr	r2, r2, #65536
 325 0024 1A60     		str	r2, [r3]
 326              	.L13:
 351:../cmsis_boot/system_stm32f4xx.c ****  
 352:../cmsis_boot/system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 353:../cmsis_boot/system_stm32f4xx.c ****   do
 354:../cmsis_boot/system_stm32f4xx.c ****   {
 355:../cmsis_boot/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 327              		.loc 1 355 0 discriminator 1
 328 0026 4FF46053 		mov	r3, #14336
 329 002a C4F20203 		movt	r3, 16386
 330 002e 1B68     		ldr	r3, [r3]
 331 0030 03F40033 		and	r3, r3, #131072
 332 0034 3B60     		str	r3, [r7]
 356:../cmsis_boot/system_stm32f4xx.c ****     StartUpCounter++;
 333              		.loc 1 356 0 discriminator 1
 334 0036 7B68     		ldr	r3, [r7, #4]
 335 0038 0133     		adds	r3, r3, #1
 336 003a 7B60     		str	r3, [r7, #4]
 357:../cmsis_boot/system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 337              		.loc 1 357 0 discriminator 1
 338 003c 3B68     		ldr	r3, [r7]
 339 003e 002B     		cmp	r3, #0
 340 0040 03D1     		bne	.L12
 341 0042 7B68     		ldr	r3, [r7, #4]
 342 0044 B3F5A06F 		cmp	r3, #1280
 343 0048 EDD1     		bne	.L13
 344              	.L12:
 358:../cmsis_boot/system_stm32f4xx.c **** 
 359:../cmsis_boot/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 345              		.loc 1 359 0
 346 004a 4FF46053 		mov	r3, #14336
 347 004e C4F20203 		movt	r3, 16386
 348 0052 1B68     		ldr	r3, [r3]
 349 0054 03F40033 		and	r3, r3, #131072
 350 0058 002B     		cmp	r3, #0
 351 005a 02D0     		beq	.L14
 360:../cmsis_boot/system_stm32f4xx.c ****   {
 361:../cmsis_boot/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 352              		.loc 1 361 0
 353 005c 0123     		movs	r3, #1
 354 005e 3B60     		str	r3, [r7]
 355 0060 01E0     		b	.L15
 356              	.L14:
 362:../cmsis_boot/system_stm32f4xx.c ****   }
 363:../cmsis_boot/system_stm32f4xx.c ****   else
 364:../cmsis_boot/system_stm32f4xx.c ****   {
 365:../cmsis_boot/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 357              		.loc 1 365 0
 358 0062 0023     		movs	r3, #0
 359 0064 3B60     		str	r3, [r7]
 360              	.L15:
 366:../cmsis_boot/system_stm32f4xx.c ****   }
 367:../cmsis_boot/system_stm32f4xx.c **** 
 368:../cmsis_boot/system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 361              		.loc 1 368 0
 362 0066 3B68     		ldr	r3, [r7]
 363 0068 012B     		cmp	r3, #1
 364 006a 40F08280 		bne	.L11
 369:../cmsis_boot/system_stm32f4xx.c ****   {
 370:../cmsis_boot/system_stm32f4xx.c ****     /* Select regulator voltage output Scale 1 mode, System frequency up to 168 MHz */
 371:../cmsis_boot/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 365              		.loc 1 371 0
 366 006e 4FF46053 		mov	r3, #14336
 367 0072 C4F20203 		movt	r3, 16386
 368 0076 4FF46052 		mov	r2, #14336
 369 007a C4F20202 		movt	r2, 16386
 370 007e 126C     		ldr	r2, [r2, #64]
 371 0080 42F08052 		orr	r2, r2, #268435456
 372 0084 1A64     		str	r2, [r3, #64]
 372:../cmsis_boot/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 373              		.loc 1 372 0
 374 0086 4FF4E043 		mov	r3, #28672
 375 008a C4F20003 		movt	r3, 16384
 376 008e 4FF4E042 		mov	r2, #28672
 377 0092 C4F20002 		movt	r2, 16384
 378 0096 1268     		ldr	r2, [r2]
 379 0098 42F48042 		orr	r2, r2, #16384
 380 009c 1A60     		str	r2, [r3]
 373:../cmsis_boot/system_stm32f4xx.c **** 
 374:../cmsis_boot/system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 375:../cmsis_boot/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 381              		.loc 1 375 0
 382 009e 4FF46053 		mov	r3, #14336
 383 00a2 C4F20203 		movt	r3, 16386
 384 00a6 4FF46052 		mov	r2, #14336
 385 00aa C4F20202 		movt	r2, 16386
 386 00ae 9268     		ldr	r2, [r2, #8]
 387 00b0 9A60     		str	r2, [r3, #8]
 376:../cmsis_boot/system_stm32f4xx.c ****       
 377:../cmsis_boot/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 378:../cmsis_boot/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 388              		.loc 1 378 0
 389 00b2 4FF46053 		mov	r3, #14336
 390 00b6 C4F20203 		movt	r3, 16386
 391 00ba 4FF46052 		mov	r2, #14336
 392 00be C4F20202 		movt	r2, 16386
 393 00c2 9268     		ldr	r2, [r2, #8]
 394 00c4 42F40042 		orr	r2, r2, #32768
 395 00c8 9A60     		str	r2, [r3, #8]
 379:../cmsis_boot/system_stm32f4xx.c ****     
 380:../cmsis_boot/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 381:../cmsis_boot/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 396              		.loc 1 381 0
 397 00ca 4FF46053 		mov	r3, #14336
 398 00ce C4F20203 		movt	r3, 16386
 399 00d2 4FF46052 		mov	r2, #14336
 400 00d6 C4F20202 		movt	r2, 16386
 401 00da 9268     		ldr	r2, [r2, #8]
 402 00dc 42F4A052 		orr	r2, r2, #5120
 403 00e0 9A60     		str	r2, [r3, #8]
 382:../cmsis_boot/system_stm32f4xx.c **** 
 383:../cmsis_boot/system_stm32f4xx.c ****     /* Configure the main PLL */
 384:../cmsis_boot/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 404              		.loc 1 384 0
 405 00e2 4FF46053 		mov	r3, #14336
 406 00e6 C4F20203 		movt	r3, 16386
 407 00ea 45F21942 		movw	r2, #21529
 408 00ee C0F24072 		movt	r2, 1856
 409 00f2 5A60     		str	r2, [r3, #4]
 385:../cmsis_boot/system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 386:../cmsis_boot/system_stm32f4xx.c **** 
 387:../cmsis_boot/system_stm32f4xx.c ****     /* Enable the main PLL */
 388:../cmsis_boot/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 410              		.loc 1 388 0
 411 00f4 4FF46053 		mov	r3, #14336
 412 00f8 C4F20203 		movt	r3, 16386
 413 00fc 4FF46052 		mov	r2, #14336
 414 0100 C4F20202 		movt	r2, 16386
 415 0104 1268     		ldr	r2, [r2]
 416 0106 42F08072 		orr	r2, r2, #16777216
 417 010a 1A60     		str	r2, [r3]
 389:../cmsis_boot/system_stm32f4xx.c **** 
 390:../cmsis_boot/system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 391:../cmsis_boot/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 418              		.loc 1 391 0
 419 010c 00BF     		nop
 420              	.L17:
 421              		.loc 1 391 0 is_stmt 0 discriminator 1
 422 010e 4FF46053 		mov	r3, #14336
 423 0112 C4F20203 		movt	r3, 16386
 424 0116 1B68     		ldr	r3, [r3]
 425 0118 03F00073 		and	r3, r3, #33554432
 426 011c 002B     		cmp	r3, #0
 427 011e F6D0     		beq	.L17
 392:../cmsis_boot/system_stm32f4xx.c ****     {
 393:../cmsis_boot/system_stm32f4xx.c ****     }
 394:../cmsis_boot/system_stm32f4xx.c ****    
 395:../cmsis_boot/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 396:../cmsis_boot/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 428              		.loc 1 396 0 is_stmt 1
 429 0120 4FF47053 		mov	r3, #15360
 430 0124 C4F20203 		movt	r3, 16386
 431 0128 40F20562 		movw	r2, #1541
 432 012c 1A60     		str	r2, [r3]
 397:../cmsis_boot/system_stm32f4xx.c **** 
 398:../cmsis_boot/system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 399:../cmsis_boot/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 433              		.loc 1 399 0
 434 012e 4FF46053 		mov	r3, #14336
 435 0132 C4F20203 		movt	r3, 16386
 436 0136 4FF46052 		mov	r2, #14336
 437 013a C4F20202 		movt	r2, 16386
 438 013e 9268     		ldr	r2, [r2, #8]
 439 0140 22F00302 		bic	r2, r2, #3
 440 0144 9A60     		str	r2, [r3, #8]
 400:../cmsis_boot/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 441              		.loc 1 400 0
 442 0146 4FF46053 		mov	r3, #14336
 443 014a C4F20203 		movt	r3, 16386
 444 014e 4FF46052 		mov	r2, #14336
 445 0152 C4F20202 		movt	r2, 16386
 446 0156 9268     		ldr	r2, [r2, #8]
 447 0158 42F00202 		orr	r2, r2, #2
 448 015c 9A60     		str	r2, [r3, #8]
 401:../cmsis_boot/system_stm32f4xx.c **** 
 402:../cmsis_boot/system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 403:../cmsis_boot/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 449              		.loc 1 403 0
 450 015e 00BF     		nop
 451              	.L18:
 452              		.loc 1 403 0 is_stmt 0 discriminator 1
 453 0160 4FF46053 		mov	r3, #14336
 454 0164 C4F20203 		movt	r3, 16386
 455 0168 9B68     		ldr	r3, [r3, #8]
 456 016a 03F00C03 		and	r3, r3, #12
 457 016e 082B     		cmp	r3, #8
 458 0170 F6D1     		bne	.L18
 459              	.L11:
 404:../cmsis_boot/system_stm32f4xx.c ****     {
 405:../cmsis_boot/system_stm32f4xx.c ****     }
 406:../cmsis_boot/system_stm32f4xx.c ****   }
 407:../cmsis_boot/system_stm32f4xx.c ****   else
 408:../cmsis_boot/system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 409:../cmsis_boot/system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 410:../cmsis_boot/system_stm32f4xx.c ****   }
 411:../cmsis_boot/system_stm32f4xx.c **** 
 412:../cmsis_boot/system_stm32f4xx.c **** }
 460              		.loc 1 412 0 is_stmt 1
 461 0172 0C37     		adds	r7, r7, #12
 462 0174 BD46     		mov	sp, r7
 463              		@ sp needed
 464 0176 5DF8047B 		ldr	r7, [sp], #4
 465 017a 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE112:
 469              		.text
 470              	.Letext0:
 471              		.file 2 "/opt/arm-2014.05/arm-none-eabi/include/stdint.h"
 472              		.file 3 "/media/asutp/promauto/promauto/src/stm32/workspace/02F4_Template/cmsis/core_cm4.h"
 473              		.file 4 "../cmsis_boot/stm32f4xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
     /tmp/cc78DVQ8.s:24     .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cc78DVQ8.s:21     .data.SystemCoreClock:00000000 $d
     /tmp/cc78DVQ8.s:31     .data.AHBPrescTable:00000000 AHBPrescTable
     /tmp/cc78DVQ8.s:28     .data.AHBPrescTable:00000000 $d
     /tmp/cc78DVQ8.s:49     .text.SystemInit:00000000 $t
     /tmp/cc78DVQ8.s:54     .text.SystemInit:00000000 SystemInit
     /tmp/cc78DVQ8.s:299    .text.SetSysClock:00000000 SetSysClock
     /tmp/cc78DVQ8.s:129    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/cc78DVQ8.s:134    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/cc78DVQ8.s:295    .text.SetSysClock:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.a98143eb06d636ed6a08228c168dc974
                           .group:00000000 wm4.stm32f4xx.h.48.0b3cda0630bac1bf9be1255cab0e1f3b
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.283.19a4f5b18434688c6c3486bb9c91d8d5

NO UNDEFINED SYMBOLS
